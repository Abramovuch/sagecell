<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE tsung SYSTEM "/usr/share/tsung/tsung-1.0.dtd" [] >

<!--
   This is a configuration file for Tsung (http://tsung.erlang-projects.org),
   a tool designed to stress-test servers. This file is customized for a
   simple-python-db-compute server running at [http://127.0.0.1:5000].
   
   To test the server using Tsung, run this command:
   $ tsung -f tsung.xml [-l logfile] start
   (where tsung.xml is this file). This will test the server by starting up
   a number of sessions in parallel. A session consists of the following:
     * A request for a computation ID for a particular computation (here "3+2")
     * Repeated requests (at intervals of 1 sec) for the output from that
       computation, until the output is received.
   If this file is not modified, Tsung will run for 10 minutes, with 
   one new user every 5 seconds.
   
   To generate an HTML page summarizing the data from this test, run this command:
   $ /usr/lib/tsung/bin/tsung_stats.pl
   from the directory containg the logfile (tsung.log).
   (You may have to install gnuplot and the Perl Template module from CPAN.)
-->

<tsung>
  <clients>
    <client host="localhost" use_controller_vm="true"/>
  </clients>
  <servers>
    <server host="localhost" port="5000" type="tcp"/>
  </servers>
  <load>
    <arrivalphase phase="1" duration="10" unit="minute">
      <users interarrival="5" unit="second"/>
    </arrivalphase>
  </load>
  <sessions>
    <session name="comp-request" probability="100" type="ts_http">
      <request>
        <dyn_variable name="comp_id" jsonpath="computation_id"/>
          <http url="/eval?commands=3%2B2"/>
      </request> 
      <repeat name="test">
        <thinktime value="1"/>
        <request subst="true">
          <dyn_variable name="result" jsonpath="output"/>
          <http url="/output_poll?computation_id=%%_comp_id%%"/>
        </request>
        <setdynvars sourcetype="eval"
                    code="fun({Pid,DynVars}) ->
                            {ok,Output}=ts_dynvars:lookup(result,DynVars),
                            if Output==undefined -> &quot;false&quot;;
                              true -> &quot;true&quot; end end.">
          <var name="has_output"/>
        </setdynvars>
        <until var="has_output" eq="true"/>
      </repeat>
    </session>
  </sessions>
</tsung>
